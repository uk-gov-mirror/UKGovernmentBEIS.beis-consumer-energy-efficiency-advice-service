# This file contains application configuration that is used in all cases:
# both for local development, automated tests and on the Cloud Foundry servers.
#
# Configuration that is specific to the live servers should be set by `cf env`
# and in the `application-cloud.properties` file.
#
# Configuration that is specific to development machines should go
# in application-dev.properties (and its template)

server.port=8080

# Logging
# Add any MDC data to the output.
# Modifying LOG_LEVEL_PATTERN is easier than the whole pattern, which is quite long
logging.pattern.level=%mdc %5p
# Un-comment this line for JOOQ SQL logging:
#logging.level.org.jooq=DEBUG
# Un-comment this for loads of Spring logging:
#logging.level.org.springframework.web=DEBUG
# Un-comment this to log upstream HTTP requests (e.g. to BRE):
#logging.level.org.apache.http=DEBUG

# Database Configuration
#
# This is automatically overridden on Cloud Foundry by
# https://github.com/cloudfoundry/java-buildpack-auto-reconfiguration
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:./build/db/dev.db;MODE=MYSQL;DB_CLOSE_DELAY=-1;AUTO_SERVER=TRUE;DATABASE_TO_UPPER=false
spring.datasource.schema=public
spring.datasource.username=sa
spring.datasource.password=

# JSON config
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.mapper.accept-case-insensitive-enums=true

# jOOQ Configuration
jooq.sql.dialect=H2
spring.jooq.sql-dialect=H2

spring.datasource.initialize=false
spring.datasource.continueOnError=true

# Hosting info
# The URL at which the site will be reached by end users
dceas.publicRootUrl=https://www.simpleenergyadvice.org.uk
# API Root is emitted to the page to configure the js on how to talk to this server
dceas.apiRoot=/api
# Static Root is emitted to the page to configure the js on how to fetch static assets
# (currently also served by this app, could be a CDN later)
dceas.staticRoot=/

# When the Boiler database is to be updated from source.
# This is used on the "Replacing your boiler" page to tell users if their
# boiler is efficient or not.
# See http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger.html
dceas.boiler-pcdf-database-update-cron=0 0 3 * * ? *
dceas.boiler-pcdf-database-url=http://www.boilers.org.uk/data1/pcdf2012.dat

# Scheduled job to clear old user state from the database
# Runs every 4 hours starting at 2:30AM
dceas.user-state-database-clean-cron=0 30 2/4 * * ? *

# The email address feedback is sent to
dceas.feedback-receipt-email=feedback@example.com

# Comma seperated list of ip addresses allowed to access the admin page
# This can be IP ranges in both IPv4 and IPv6
# This will be overriden on cloud instances by OS environment variables
vcap.services.dceas-user-site.config.credentials.admin-ip-whitelist=127.0.0.0/8,::1/128

# The HTTP Basic Auth password for the admin-site API
vcap.services.dceas-admin-logins.credentials.user-site=

# This is filled in at runtime on CloudFoundry
vcap.application.space_name=

# Remote connections common config
dceas.httpClient.connectTimeoutMs=10000
dceas.httpClient.readTimeoutMs=10000
dceas.httpClient.connectionPoolTimeoutMs=10000
dceas.httpClient.connectionMaxIdleMs=30000
dceas.httpClient.maxConnectionsPerRoute=5
dceas.httpClient.maxConnectionsTotal=100

# SMTP config
spring.mail.testConnection: false
spring.mail.host: ${vcap.services.smtp.credentials.host}
spring.mail.username: ${vcap.services.smtp.credentials.username}
spring.mail.password: ${vcap.services.smtp.credentials.password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000
# This is filled in at runtime on CloudFoundry
vcap.services.smtp.credentials.host=
vcap.services.smtp.credentials.username=
vcap.services.smtp.credentials.password=

# Previously called EPC_API_TOKEN
vcap.services.epc.opendatacommunities.org.credentials.username=
vcap.services.epc.opendatacommunities.org.credentials.password=
vcap.services.epc.opendatacommunities.org.credentials.apiRoot=https://epc.opendatacommunities.org/api/v1

# Phone number for the call centre
vcap.services.dceas-user-site.config.credentials.phone-number=0800 444202

# Previously called BRE_API_USERNAME etc.
vcap.services.bre.energyUse.credentials.url=https://uat.brewebserv.com/bemapi/energy_use
vcap.services.bre.energyUse.credentials.username=
vcap.services.bre.energyUse.credentials.password=

vcap.services.greenDealOrb.installersApi.credentials.url=http://gdorb.decc.gov.uk/api/
vcap.services.greenDealOrb.installersApi.credentials.apiKey=

# Tracking ids are set per-environment, not here
vcap.services.google.analytics.credentials.id=

# BUILD INFO - arbitrary structure under info.
management.context-path=/admin
info.build.number=@build.number@
info.build.tag=@build.tag@
info.build.url=@build.url@
info.environment=dev

# Wordpress reverse-proxy config
#
# TODO:BEISDEAS-156 remove this in time
# At present, all static content and all server-side dynamic content from
# the Alpha is hosted by WP. We aim to migrate that into this Java app.
#
# For now, we reverse-proxy to the WP server, which needs to be running
# on your dev machine.
#
# Keep this in sync with application-cloud.properties
charon.mappings[0].name: wordpress
charon.mappings[0].path: /wp-content
charon.mappings[0].destinations: http://localhost:81/wp-content
charon.mappings[0].timeout.read: 10000
charon.mappings[1].name: wordpress-json
charon.mappings[1].path: /wp-json
charon.mappings[1].destinations: http://localhost:81/wp-json
charon.mappings[1].timeout.read: 10000

# Quartz is used to schedule regular jobs
# We don't need it in dev mode or during testing.
quartz.enabled=false

# Spring will run all pending migrations on app startup
# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html#howto-execute-liquibase-database-migrations-on-startup
liquibase.change-log=classpath:db/changelog.xml
