/*
 * This file is generated by jOOQ.
*/
package uk.gov.beis.dceas.db.gen.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import uk.gov.beis.dceas.db.gen.tables.Feedback;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedbackRecord extends UpdatableRecordImpl<FeedbackRecord> implements Record6<Integer, String, String, String, String, Timestamp> {

    private static final long serialVersionUID = -314235295;

    /**
     * Setter for <code>feedback.id</code>.
     */
    public FeedbackRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>feedback.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>feedback.name</code>.
     */
    public FeedbackRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>feedback.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>feedback.email</code>.
     */
    public FeedbackRecord setEmail(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>feedback.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>feedback.subject</code>.
     */
    public FeedbackRecord setSubject(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>feedback.subject</code>.
     */
    public String getSubject() {
        return (String) get(3);
    }

    /**
     * Setter for <code>feedback.message</code>.
     */
    public FeedbackRecord setMessage(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>feedback.message</code>.
     */
    public String getMessage() {
        return (String) get(4);
    }

    /**
     * Setter for <code>feedback.created</code>.
     */
    public FeedbackRecord setCreated(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>feedback.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, String, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, String, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Feedback.FEEDBACK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Feedback.FEEDBACK.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Feedback.FEEDBACK.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Feedback.FEEDBACK.SUBJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Feedback.FEEDBACK.MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Feedback.FEEDBACK.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSubject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value3(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value4(String value) {
        setSubject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value5(String value) {
        setMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value6(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord values(Integer value1, String value2, String value3, String value4, String value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedbackRecord
     */
    public FeedbackRecord() {
        super(Feedback.FEEDBACK);
    }

    /**
     * Create a detached, initialised FeedbackRecord
     */
    public FeedbackRecord(Integer id, String name, String email, String subject, String message, Timestamp created) {
        super(Feedback.FEEDBACK);

        set(0, id);
        set(1, name);
        set(2, email);
        set(3, subject);
        set(4, message);
        set(5, created);
    }
}
